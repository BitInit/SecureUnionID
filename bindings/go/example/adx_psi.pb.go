// Code generated by protoc-gen-go. DO NOT EDIT.
// source: adx_psi.proto

package example

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ResponseCode int32

const (
	// 签名成功
	ResponseCode_Success ResponseCode = 0
	// sender与outId不匹配, 认证失败
	ResponseCode_SenderOutIdMatchFailed ResponseCode = 100
	// 未找到DSP对应的的私钥
	ResponseCode_SkAuthenticationFailed ResponseCode = 101
	// 触达最大访问量, DSP应尽量将did与加密did落库
	ResponseCode_ThresholdReached ResponseCode = 102
	// server签名算法抛出异常
	ResponseCode_InnerAlgorithmFailed ResponseCode = 103
)

var ResponseCode_name = map[int32]string{
	0:   "Success",
	100: "SenderOutIdMatchFailed",
	101: "SkAuthenticationFailed",
	102: "ThresholdReached",
	103: "InnerAlgorithmFailed",
}

var ResponseCode_value = map[string]int32{
	"Success":                0,
	"SenderOutIdMatchFailed": 100,
	"SkAuthenticationFailed": 101,
	"ThresholdReached":       102,
	"InnerAlgorithmFailed":   103,
}

func (x ResponseCode) Enum() *ResponseCode {
	p := new(ResponseCode)
	*p = x
	return p
}

func (x ResponseCode) String() string {
	return proto.EnumName(ResponseCode_name, int32(x))
}

func (x *ResponseCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ResponseCode_value, data, "ResponseCode")
	if err != nil {
		return err
	}
	*x = ResponseCode(value)
	return nil
}

func (ResponseCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c31f4a8a0190b930, []int{0}
}

type SignRequest struct {
	// 发起签名的一方,能够标示DSP的Identity, 媒体侧需要这个参数找到DSP对应的私钥
	Sender *string `protobuf:"bytes,1,req,name=sender" json:"sender,omitempty"`
	// dsp和对应媒体约定的outId
	OutId *string `protobuf:"bytes,2,req,name=out_id,json=outId" json:"out_id,omitempty"`
	// DSP需要媒体签名的数据，这部分数据DSP已经盲化过
	BlindedMessages      []string `protobuf:"bytes,3,rep,name=blinded_messages,json=blindedMessages" json:"blinded_messages,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignRequest) Reset()         { *m = SignRequest{} }
func (m *SignRequest) String() string { return proto.CompactTextString(m) }
func (*SignRequest) ProtoMessage()    {}
func (*SignRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c31f4a8a0190b930, []int{0}
}

func (m *SignRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignRequest.Unmarshal(m, b)
}
func (m *SignRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignRequest.Marshal(b, m, deterministic)
}
func (m *SignRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignRequest.Merge(m, src)
}
func (m *SignRequest) XXX_Size() int {
	return xxx_messageInfo_SignRequest.Size(m)
}
func (m *SignRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignRequest proto.InternalMessageInfo

func (m *SignRequest) GetSender() string {
	if m != nil && m.Sender != nil {
		return *m.Sender
	}
	return ""
}

func (m *SignRequest) GetOutId() string {
	if m != nil && m.OutId != nil {
		return *m.OutId
	}
	return ""
}

func (m *SignRequest) GetBlindedMessages() []string {
	if m != nil {
		return m.BlindedMessages
	}
	return nil
}

type SignResponse struct {
	// 标记媒体侧的Identity，方便DSP做正确性校验以及定位出有问题的媒体
	Receiver *string `protobuf:"bytes,1,req,name=receiver" json:"receiver,omitempty"`
	// 媒体返回的状态码
	RspCode *ResponseCode `protobuf:"varint,2,req,name=rsp_code,json=rspCode,enum=adx.psi.ResponseCode" json:"rsp_code,omitempty"`
	// 媒体基于当前receiver所使用密钥的版本
	SkVersion *string `protobuf:"bytes,3,req,name=sk_version,json=skVersion" json:"sk_version,omitempty"`
	// 媒体私钥签名后的数据，顺序与输入数据对齐。
	SignedMessages       []string `protobuf:"bytes,4,rep,name=signed_messages,json=signedMessages" json:"signed_messages,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignResponse) Reset()         { *m = SignResponse{} }
func (m *SignResponse) String() string { return proto.CompactTextString(m) }
func (*SignResponse) ProtoMessage()    {}
func (*SignResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c31f4a8a0190b930, []int{1}
}

func (m *SignResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignResponse.Unmarshal(m, b)
}
func (m *SignResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignResponse.Marshal(b, m, deterministic)
}
func (m *SignResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignResponse.Merge(m, src)
}
func (m *SignResponse) XXX_Size() int {
	return xxx_messageInfo_SignResponse.Size(m)
}
func (m *SignResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SignResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SignResponse proto.InternalMessageInfo

func (m *SignResponse) GetReceiver() string {
	if m != nil && m.Receiver != nil {
		return *m.Receiver
	}
	return ""
}

func (m *SignResponse) GetRspCode() ResponseCode {
	if m != nil && m.RspCode != nil {
		return *m.RspCode
	}
	return ResponseCode_Success
}

func (m *SignResponse) GetSkVersion() string {
	if m != nil && m.SkVersion != nil {
		return *m.SkVersion
	}
	return ""
}

func (m *SignResponse) GetSignedMessages() []string {
	if m != nil {
		return m.SignedMessages
	}
	return nil
}

func init() {
	proto.RegisterEnum("adx.psi.ResponseCode", ResponseCode_name, ResponseCode_value)
	proto.RegisterType((*SignRequest)(nil), "adx.psi.SignRequest")
	proto.RegisterType((*SignResponse)(nil), "adx.psi.SignResponse")
}

func init() { proto.RegisterFile("adx_psi.proto", fileDescriptor_c31f4a8a0190b930) }

var fileDescriptor_c31f4a8a0190b930 = []byte{
	// 315 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xcf, 0x6a, 0xea, 0x40,
	0x14, 0xc6, 0xaf, 0x7a, 0xaf, 0x7f, 0x8e, 0x5e, 0x0d, 0x83, 0x4a, 0x10, 0x2e, 0x88, 0x9b, 0x6b,
	0xbb, 0x08, 0xa5, 0x6f, 0x20, 0x85, 0x82, 0x0b, 0x29, 0xc4, 0xd2, 0x6d, 0x98, 0xce, 0x39, 0x4d,
	0x06, 0xe3, 0x4c, 0x3a, 0x67, 0x22, 0xee, 0xfb, 0x2a, 0x7d, 0xd0, 0x62, 0x8c, 0xe2, 0x6e, 0xce,
	0xef, 0x0c, 0xdf, 0xf7, 0x9b, 0x81, 0xbf, 0x12, 0x8f, 0x49, 0xc1, 0x3a, 0x2a, 0x9c, 0xf5, 0x56,
	0x74, 0x24, 0x1e, 0xa3, 0x82, 0xf5, 0x22, 0x85, 0xfe, 0x56, 0xa7, 0x26, 0xa6, 0xcf, 0x92, 0xd8,
	0x8b, 0x29, 0xb4, 0x99, 0x0c, 0x92, 0x0b, 0x1b, 0xf3, 0xe6, 0xb2, 0x17, 0xd7, 0x93, 0x98, 0x40,
	0xdb, 0x96, 0x3e, 0xd1, 0x18, 0x36, 0x2b, 0xfe, 0xc7, 0x96, 0x7e, 0x8d, 0xe2, 0x0e, 0x82, 0xf7,
	0x5c, 0x1b, 0x24, 0x4c, 0xf6, 0xc4, 0x2c, 0x53, 0xe2, 0xb0, 0x35, 0x6f, 0x2d, 0x7b, 0xf1, 0xa8,
	0xe6, 0x9b, 0x1a, 0x2f, 0xbe, 0x1b, 0x30, 0x38, 0x37, 0x71, 0x61, 0x0d, 0x93, 0x98, 0x41, 0xd7,
	0x91, 0x22, 0x7d, 0xb8, 0x96, 0x5d, 0x67, 0xf1, 0x00, 0x5d, 0xc7, 0x45, 0xa2, 0x2c, 0x52, 0x55,
	0x38, 0x7c, 0x9c, 0x44, 0xb5, 0x71, 0x74, 0x09, 0x78, 0xb2, 0x48, 0x71, 0xc7, 0x71, 0x71, 0x3a,
	0x88, 0x7f, 0x00, 0xbc, 0x4b, 0x0e, 0xe4, 0x58, 0x5b, 0x13, 0xb6, 0xaa, 0xbc, 0x1e, 0xef, 0xde,
	0xce, 0x40, 0xfc, 0x87, 0x11, 0xeb, 0xd4, 0xdc, 0x7a, 0xfe, 0xae, 0x3c, 0x87, 0x67, 0x7c, 0xd1,
	0xbc, 0xff, 0x6a, 0xc0, 0xe0, 0xb6, 0x41, 0xf4, 0xa1, 0xb3, 0x2d, 0x95, 0x22, 0xe6, 0xe0, 0x97,
	0x98, 0xc1, 0x74, 0x5b, 0x7d, 0xc8, 0xcb, 0xe9, 0xf9, 0x1b, 0xe9, 0x55, 0xf6, 0x2c, 0x75, 0x4e,
	0x18, 0x60, 0xb5, 0xdb, 0xad, 0x4a, 0x9f, 0x91, 0xf1, 0x5a, 0x49, 0xaf, 0xad, 0xa9, 0x77, 0x24,
	0xc6, 0x10, 0xbc, 0x66, 0x8e, 0x38, 0xb3, 0x39, 0xc6, 0x24, 0x55, 0x46, 0x18, 0x7c, 0x88, 0x10,
	0xc6, 0x6b, 0x63, 0xc8, 0xad, 0xf2, 0xd4, 0x3a, 0xed, 0xb3, 0x7d, 0x7d, 0x3f, 0xfd, 0x09, 0x00,
	0x00, 0xff, 0xff, 0xe2, 0x2c, 0x46, 0xb7, 0xae, 0x01, 0x00, 0x00,
}
